{"version":3,"sources":["/./$_lazy_route_resource lazy namespace object","/./src/app/app.component.html","/./src/app/todo/todo.component.html","/./src/app/app.component.css","/./src/app/app.component.ts","/./src/app/app.module.ts","/./src/app/todo/todo.component.css","/./src/app/todo/todo.component.ts","/./src/environments/environment.ts","/./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<app-todo></app-todo>\"","module.exports = \"<div class=\\\"jumbotron jumbotron-fluid\\\">\\n  <div class=\\\"container\\\">\\n    <h1 class=\\\"display-4\\\">Angular 8 Todo App</h1>\\n    <p class=\\\"lead\\\">A sample todo app built in Angular 8</p>\\n  </div>\\n</div>\\n\\n\\n\\n\\n\\n\\n<div class=\\\"container\\\">\\n  <div class=\\\"row justify-content-md-center\\\">\\n    <div class=\\\"col-8 align-self-center\\\">\\n      <input type=\\\"text\\\" name=\\\"todoText\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"todoText\\\" (keyup.enter)=\\\"onAddTodoText()\\\" />\\n    </div>\\n    <div class=\\\"col-2\\\">\\n      <button class=\\\"btn btn-sm btn-primary btn-block\\\" (click)=\\\"onAddTodoText()\\\">Add</button>\\n      \\n    </div>\\n    <div class=\\\"col-2\\\">\\n    <button class=\\\"btn btn-sm btn-primary btn-block\\\" (click)=\\\"onClearTodoText()\\\">Clear</button>\\n    </div>\\n  </div>\\n  \\n  <hr>\\n\\n\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col\\\">\\n      <div *ngIf=\\\"isTodoListEmpty\\\">\\n        <p>List is empty!</p>\\n      </div>\\n      <div class=\\\"list-group\\\" *ngIf=\\\"!isTodoListEmpty\\\">\\n        <a href=\\\"#\\\" class=\\\"list-group-item list-group-item-action\\\" *ngFor=\\\"let todo of todoList\\\">\\n          <div class=\\\"d-flex w-100 justify-content-between\\\">\\n            <h5 class=\\\"mb-1\\\" [ngClass]=\\\"todo.isCompleted ? 'strike':''\\\">{{todo.text}}</h5>\\n            <button class=\\\"btn btn-sm btn-primary\\\" (click)=\\\"onCompletingTask(todo.todoId)\\\">{{todo.buttonText}}</button>\\n          </div>\\n        </a>\\n      </div>\\n    </div>\\n  </div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'angular-todo-project';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from \"@angular/forms\";\n\nimport { AppComponent } from './app.component';\nimport { TodoComponent } from './todo/todo.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    TodoComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \".strike {\\r\\n  text-decoration: line-through;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdG9kby90b2RvLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSw2QkFBNkI7QUFDL0IiLCJmaWxlIjoic3JjL2FwcC90b2RvL3RvZG8uY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5zdHJpa2Uge1xyXG4gIHRleHQtZGVjb3JhdGlvbjogbGluZS10aHJvdWdoO1xyXG59Il19 */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-todo',\n  templateUrl: './todo.component.html',\n  styleUrls: ['./todo.component.css']\n})\nexport class TodoComponent implements OnInit {\n\n  todoText: string = \"\";\n  todoList: any = [];\n  isTodoListEmpty = false;\n\n  constructor() { }\n\n  ngOnInit() {\n    this.isTodoListEmpty=true;\n  }\n\n  onAddTodoText() {\n    if (this.todoText!=\"\"){\n      console.log(\"adding the todoText - \", this.todoText);\n      let todoObj = {todoId: this.todoList.length, text: this.todoText, isCompleted: false, buttonText:\"Done\"};\n\n      this.todoList.push(todoObj);\n      this.todoText = \"\";\n      this.isTodoListEmpty=false;  \n    }\n  }\n  \n  onClearTodoText() {\n    console.log(\"clearing the todoList - \", this.todoList);\n    this.todoList=[];\n    this.todoText=\"\";\n    this.isTodoListEmpty=true;\n  }\n\n  onCompletingTask(todoId:number){\n    if (this.todoList[todoId].isCompleted){\n      this.todoList[todoId].isCompleted = false;\n      this.todoList[todoId].buttonText = \"Done\";\n    }else{\n      this.todoList[todoId].isCompleted = true;\n      this.todoList[todoId].buttonText = \"Undone\";\n    }\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}